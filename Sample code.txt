
  def csv_path
    @data_hash = params[:importer]
    @importer = Product.new
    @data = @importer.csv_import(@data_hash[:import])
  end

<p>
		<% f.label :upload %> Select File : 
		<%= f.field 'upload', 'datafile' %>
	</p>

	<%= submit_tag "Upload" %>
  <%= end %>



    <%= form_tag :action => 'uploadFile',:multipart => true%>
		<%= label_tag :file %>
	  	<%= file_field_tag :file %>
	
	
	  	<%= submit_tag 'Upload' %>
	
	<%= end_form_tag %>
	
<p>
		<% f.label :upload %> Select File : 
		<%= f.field 'upload', 'datafile' %>
	</p>

	<%= submit_tag "Upload" %>
  <%= end %>

  <%= form_tag do %>
  



  <%= f.submit %>
  <% end %>


  working 

  <h1>File Upload</h1>
	  <%= form_tag({action: :uploadfile}, multipart: true) do %>
	  <p> Select File :
	  <%= file_field_tag 'Upload' %>
	  </p>
	  <%= submit_tag "Upload" %>

<% end %>

header from upload controller
  def index
     render :file => 'app\views\upload\uploadfile.html.erb'
  end

  working delete and static upload

  	def csv_import(data)
		if data==3
			Product.delete_all
			CSV.foreach('C:\Users\Apurva\Desktop\products.csv', :headers => true) do |row|
			  	Product.create!(row.to_hash)
			end
		end
	end

Half working
	<h1>File Upload</h1>
    <%= form_tag(method: :upload, multipart: true) do %>
    <p> File to Upload:<%= file_field_tag  'file' %>
    </p>
    <div class="actions">
    <%= submit_tag "Up Load" %>
    </div>
<% end %>

<%=  case category.category
          when "Audio"
            link_to 'Show', :action => "complete"
          when "Cameras"
           link_to 'Show', :action => "complete"
          when "Computers and Tablets"
           link_to 'Show', :action => "complete"
          when "WhiteGoods"
            link_to 'Show', :action => "complete"
           %>

products controller

  # PATCH/PUT /products/1
  # PATCH/PUT /products/1.json
  def update
    respond_to do |format|
      if @product.update(product_params)
        format.html { redirect_to @product, notice: 'Product was successfully updated.' }
        format.json { render :show, status: :ok, location: @product }
      else
        format.html { render :edit }
        format.json { render json: @product.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /products/1
  # DELETE /products/1.json
  def destroy
    @product.destroy
    respond_to do |format|
      format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }
      format.json { head :no_content }
    end
  end